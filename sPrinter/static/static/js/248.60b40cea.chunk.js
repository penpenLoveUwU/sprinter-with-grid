!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"===typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===r(t)?t:String(t)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,i(r.key),r)}}function o(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var s=function(){function e(t){n(this,e),this.id=t,this.adjacentVertexIds=new Set,this.color=void 0}return o(e,[{key:"appendVertex",value:function(e){void 0!==e&&this.adjacentVertexIds.add(e)}}]),e}(),u=function(){function e(t){var r=this;n(this,e),this.vertices=t,this.vertexLookup=new Map,this.vertices.forEach((function(e){r.vertexLookup.set(e.id,e)}))}return o(e,[{key:"connectVertices",value:function(e,t){void 0!==e&&void 0!==t&&e!==t&&(this.vertexLookup.has(e)&&this.vertexLookup.get(e).appendVertex(t),this.vertexLookup.has(t)&&this.vertexLookup.get(t).appendVertex(e))}},{key:"colorAllVertices",value:function(){var e=this;this.vertices.sort((function(e,t){return t.adjacentVertexIds.size-e.adjacentVertexIds.size})),this.vertices.forEach((function(t){if(t.adjacentVertexIds.size<=0)t.color=0;else{var n=e.getAdjacentVertices(t).filter((function(e){return void 0!==e.color})).map((function(e){return e.color}));t.color=e.lowestColor(n)}}))}},{key:"getAdjacentVertices",value:function(e){var t=this;return Array.from(e.adjacentVertexIds).map((function(e){return t.getById(e)})).filter((function(e){return void 0!==e}))}},{key:"getById",value:function(e){return this.vertices.find((function(t){return t.id===e}))}},{key:"lowestColor",value:function(e){if(e.length<=0)return 0;for(var t=0;t<e.length+1;t++)if(!e.includes(t))return t}}]),e}();var m=function(){function e(t,r){n(this,e);var i=Math.floor(30/r);this.stepFunction=function(e){return e+i};var a=this.preprocessLayers(t);if(void 0!==a){var o=this.createPixelToSegmentMapping(a);this.areaGraph=this.buildGraph(o),this.areaGraph.colorAllVertices()}}return o(e,[{key:"getColor",value:function(e){if(void 0===this.areaGraph)return 0;var t=this.areaGraph.getById(e);return t&&void 0!==t.color?t.color:0}},{key:"preprocessLayers",value:function(t){var n=[],r={minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0},i=t.filter((function(e){return"segment"===e.type}));if(!(i.length<=0))return i.forEach((function(t){for(var i=[],a=0;a<t.pixels.length-1;a+=2){var o={x:t.pixels[a],y:t.pixels[a+1]};e.setBoundaries(r,o),i.push(o)}void 0!==t.metaData.segmentId&&n.push({segmentId:t.metaData.segmentId,name:t.metaData.name,pixels:i})})),{boundaries:r,segments:n}}},{key:"createPixelToSegmentMapping",value:function(e){var n,r,i=(n=e.boundaries.maxX+1,r=e.boundaries.maxY+1,t(new Array(n)).map((function(e){return t(new Array(r))}))),a=[];return e.segments.forEach((function(e){a.push(e.segmentId),e.pixels.forEach((function(t){i[t.x][t.y]=e.segmentId}))})),{map:i,segmentIds:a,boundaries:e.boundaries}}},{key:"buildGraph",value:function(e){var t=e.segmentIds.map((function(e){return new s(e)})),n=new u(t);return this.traverseMap(e.boundaries,e.map,(function(e,t,r,i){var a=i[e][t];return n.connectVertices(r,a),void 0!==a?a:r})),n}},{key:"traverseMap",value:function(e,t,n){for(var r=e.minY;r<=e.maxY;r=this.stepFunction(r))for(var i=void 0,a=e.minX;a<=e.maxX;a=this.stepFunction(a))i=n(a,r,i,t);for(var o=e.minX;o<=e.maxX;o=this.stepFunction(o))for(var s=void 0,u=e.minY;u<=e.maxY;u=this.stepFunction(u))s=n(o,u,s,t)}}],[{key:"setBoundaries",value:function(e,t){t.x<e.minX&&(e.minX=t.x),t.y<e.minY&&(e.minY=t.y),t.x>e.maxX&&(e.maxX=t.x),t.y>e.maxY&&(e.maxY=t.y)}}]),e}();function c(e,n,r,i){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],o=function(e){var t={x:{min:1/0,max:-1/0,sum:0},y:{min:1/0,max:-1/0,sum:0}};return e.forEach((function(e){t.x.min=e.dimensions.x.min<t.x.min?e.dimensions.x.min:t.x.min,t.x.max=e.dimensions.x.max>t.x.max?e.dimensions.x.max:t.x.max,t.y.min=e.dimensions.y.min<t.y.min?e.dimensions.y.min:t.y.min,t.y.max=e.dimensions.y.max>t.y.max?e.dimensions.y.max:t.y.max})),t.x.sum=t.x.max-t.x.min+1,t.y.sum=t.y.max-t.y.min+1,t.x.sum=isFinite(t.x.sum)?t.x.sum:0,t.y.sum=isFinite(t.y.sum)?t.y.sum:0,t}(e),s=o.x.sum,u=o.y.sum,c=new Uint8ClampedArray(s*u*4),f=new Uint8ClampedArray(s*u),d=new Map,p=new m(e,n),y=0===a.length;return t(e).sort((function(e,t){return l[e.type]-l[t.type]})).forEach((function(e){var t;switch(e.type){case"floor":t=y?r.floor:i.floor;break;case"wall":t=y?r.wall:i.wall;break;case"segment":var n,u,m;if(y||a.includes(null!==(n=e.metaData.segmentId)&&void 0!==n?n:""))t=r.segments[p.getColor(null!==(u=e.metaData.segmentId)&&void 0!==u?u:"")];else t=i.segments[p.getColor(null!==(m=e.metaData.segmentId)&&void 0!==m?m:"")]}t||(console.error("Missing color for ".concat(e.type," with segment id '").concat(e.metaData.segmentId,"'.")),t={r:128,g:128,b:128});var l=0;e.metaData.segmentId&&(l=d.size+1,d.set(l,e.metaData.segmentId));for(var v=0;v<e.pixels.length;v+=2){var x=e.pixels[v]-o.x.min+(e.pixels[v+1]-o.y.min)*s,h=4*x;c[h]=t.r,c[h+1]=t.g,c[h+2]=t.b,c[h+3]=255,f[x]=l}})),{pixelData:c,width:o.x.sum,height:o.y.sum,left:o.x.min,top:o.y.min,segmentLookupData:f,segmentLookupIdMapping:Object.fromEntries(d)}}var l={floor:14,segment:15,wall:16};console.log("MapLayerManager.worker is running in","strict","mode");var f=[];window.self.postMessage({ready:!0}),window.self.addEventListener("message",(function(e){e.data.mapLayers&&(f=e.data.mapLayers);var t=c(f,e.data.pixelSize,e.data.colors,e.data.backgroundColors,e.data.selectedSegmentIds);window.self.postMessage({pixelData:t.pixelData.buffer,width:t.width,height:t.height,left:t.left,top:t.top,segmentLookupData:t.segmentLookupData.buffer,segmentLookupIdMapping:t.segmentLookupIdMapping},{transfer:[t.pixelData.buffer,t.segmentLookupData.buffer]})}))}();
//# sourceMappingURL=248.60b40cea.chunk.js.map